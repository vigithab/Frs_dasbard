import sys

import numpy as np
import xlrd

sys.path.append(r"C:\Users\Lebedevvv\Desktop\FRS\PYTHON\venv\Lib\site-packages")
sys.path.append(r"C:\Users\Lebedevvv\Desktop\FRS\PYTHON")
import os
import shutil
import zipfile
import openpyxl
import pandas as pd
from Bot_FRS_v2.BOT_TELEGRAM import BOT
from Bot_FRS_v2.INI import ini,rename
from fuzzywuzzy import fuzz, process

ta = ini.time_bot_vrem
PUT = ini.PUT

class NEW_DATA_sd:
    def reserv(self):
        try:
            replacements = pd.read_excel("https://docs.google.com/spreadsheets/d/1SfuC2zKUFt6PQOYhB8EEivRjy4Dz-o4WDL-IR7CT3Eg/export?exportFormat=xlsx")
            replacements.to_excel(PUT + "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏\\–ù–∞–π—Ç–∏_–∑–∞–º–µ–Ω–∏—Ç—å\\–ó–∞–º–µ–Ω–∞ –∞–¥—Ä–µ—Å–æ–≤.xlsx", index=False)


            spravka = pd.read_excel("https://docs.google.com/spreadsheets/d/1qXyD0hr1sOzoMKvMyUBpfTXDwLkh0RwLcNLuiNbWmSM/export?exportFormat=xlsx")
            spravka.to_excel(PUT + "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏\\–ú–∞–≥–∞–∑–∏–Ω—ã\\–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –¢–¢.xlsx")
            spravka = spravka.loc[spravka["–ú–µ–Ω–µ–¥–∂–µ—Ä"].notnull()]
            spravka = spravka.loc[spravka["–ú–µ–Ω–µ–¥–∂–µ—Ä"]!= "–Ω–µ—Ç –º–∞–≥–∞–∑–∏–Ω–∞"]
            spravka = spravka.loc[spravka["–ú–µ–Ω–µ–¥–∂–µ—Ä"] != "–û—Ç–¥–µ–ª —Ç–æ—Ä–≥–æ–≤–æ–π —Å–µ—Ç–∏"]
            spravka = spravka.loc[spravka["–ú–µ–Ω–µ–¥–∂–µ—Ä"] != "–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω(–¢–¢ –µ—â–µ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ)"]

            # –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
            unique_managers = spravka["–ú–µ–Ω–µ–¥–∂–µ—Ä"].unique()
            # –°–æ—Ä—Ç–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
            unique_managers_sorted = sorted(unique_managers)
            # –°–æ–∑–¥–∞–µ–º DataFrame —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏ –∏ –∏—Ö –Ω—É–º–µ—Ä–∞—Ü–∏–µ–π
            unique_managers = pd.DataFrame(
                {'–ú–µ–Ω–µ–¥–∂–µ—Ä': unique_managers_sorted, '–ù—É–º–µ—Ä–∞—Ü–∏—è': range(1, len(unique_managers_sorted) + 1)})

            unique_managers["–ú–µ–Ω–µ–Ω–¥–∂–µ—Ä –∫–æ—Ä–æ—Ç–∫–æ"] = unique_managers ["–ú–µ–Ω–µ–¥–∂–µ—Ä"]

            Ln_tip = {'–¢—É—Ä–æ–≤–∞ –ê–Ω–Ω–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞': '–¢—É—Ä–æ–≤–∞ –ê.–°',
                      '–ë–∞—Ä–∞–Ω–æ–≤–∞ –õ–∞—Ä–∏—Å–∞ –í–∏–∫—Ç–æ—Ä–æ–≤–Ω–∞': '–ë–∞—Ä–∞–Ω–æ–≤–∞ –õ.–í',
                      '–ì–µ—Ä–æ–≤—Å–∫–∏–π –ò–≤–∞–Ω –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á': '–ì–µ—Ä–æ–≤—Å–∫–∏–π –ò.–í',
                      '–ò–∑–æ—Ç–æ–≤ –í–∞–¥–∏–º –í–∞–ª–µ–Ω—Ç–∏–Ω–æ–≤–∏—á': '–ò–∑–æ—Ç–æ–≤ –í.–í',
                      '–¢–æ–º—Å–∫': '–¢–æ–º—Å–∫',
                      '–ü–∞–≤–ª–æ–≤–∞ –ê–Ω–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞': '–ü–∞–≤–ª–æ–≤–∞ –ê.–ê',
                      '–í–∞–∫–∞–Ω—Å–∏—è': '–í–∞–∫–∞–Ω—Å–∏—è',
                      '–°–µ—Ä–≥–µ–µ–≤ –ê–ª–µ–∫—Å–µ–π –°–µ—Ä–≥–µ–µ–≤–∏—á': '–°–µ—Ä–≥–µ–µ–≤ –ê.–°',
                      '–ö–∞—Ä–ø–æ–≤–∞ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –≠–¥—É–∞—Ä–¥–æ–≤–Ω–∞': '–ö–∞—Ä–ø–æ–≤–∞ –ï.–≠'}

            unique_managers["–ú–µ–Ω–µ–Ω–¥–∂–µ—Ä –∫–æ—Ä–æ—Ç–∫–æ"] = unique_managers["–ú–µ–Ω–µ–Ω–¥–∂–µ—Ä –∫–æ—Ä–æ—Ç–∫–æ"].map(Ln_tip)
            print(unique_managers)
            unique_managers.to_csv(PUT + "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏\\–ú–∞–≥–∞–∑–∏–Ω—ã\\unique_managers.csv",index=True)
            BOT.BOT().bot_mes_html(mes="‚úÖ –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤(—Ä–µ–∑–µ—Ä–≤)", silka=0)
        except:
            BOT.BOT().bot_mes_html(mes="üìõ –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤(—Ä–µ–∑–µ—Ä–≤) - –û—à–∏–±–∫–∞", silka=0)
            print("–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
    def setevoy(self):
            put_zip = r'\\rtlfranch3\–î–∞–Ω–Ω—ã–µ –∏–∑ 1–°\–î–ª—è –î–∞—à–±–æ—Ä–¥–∞\–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å'
            put_zip_end = PUT + "\\Selenium\\–°–µ—Ç–µ–≤–æ–π –¥–∏—Å–∫\\"
            put_zip_extract =  PUT+ "Selenium\\–°–µ—Ç–µ–≤–æ–π –¥–∏—Å–∫\\–†–∞—Å–ø–∞–∫–æ–≤–∫–∞_—à—Ç—Ä–∏—Ö–∫–æ–¥_—Å–∏–±–µ—Å—Ç–æ–µ–º–æ—Å—Ç—å_–ø—Ä–æ–≤–µ—Ä–∫–∞\\"
            put_sebes = PUT + "NEW\\–°–∏–±–µ—Å—Ç–æ–µ–º–æ—Å—Ç—å\\"
            put_proverca = PUT + "NEW\\–û–ë–†–ê–ë–û–¢–ö–ê –û–®–ò–ë–û–ö\\–ü—Ä–æ–¥–∞–∂–∏ 1—Å –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏\\"
            put_spravka = PUT + "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏\\"

            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –∑–∞–¥–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
            files = os.listdir(put_zip)
            # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ ZIP-–∞—Ä—Ö–∏–≤–æ–≤
            zip_files = [file for file in files if file.endswith('.zip')]
            # –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞—Ä (–≤—Ä–µ–º—è –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∏–º—è —Ñ–∞–π–ª–∞)
            file_times = [(os.path.getmtime(os.path.join(put_zip, file)), file) for file in zip_files]
            # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞ –ø–∞—Ä –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –±—É–¥–µ—Ç –ø–µ—Ä–≤—ã–º)
            file_times.sort(reverse=True)
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–º—É ZIP-–∞—Ä—Ö–∏–≤—É
            last_modified_zip = os.path.join(put_zip, file_times[0][1])
            # –ò–º—è —Ñ–∞–π–ª–∞
            name_fail = os.path.basename(last_modified_zip)
            # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ ZIP-—Ñ–∞–π–ª–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å
            shutil.copy(last_modified_zip, put_zip_end)
            # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ —Ñ–∞–π–ª–∞
            zip_files = os.path.join(put_zip_end ,name_fail)

            with zipfile.ZipFile(zip_files, 'r') as zip_ref:
                zip_ref.extractall(put_zip_extract)

            put_sebes_extract = os.path.join(put_zip_extract, '–§–∏–Ω—Ä–µ–∑ –ª–µ–±–µ–¥–µ–≤ (TXT).txt')
            print("–ü–æ–ª—É—á–µ–Ω–∏–µ: –§–∏–Ω—Ä–µ–∑ –ª–µ–±–µ–¥–µ–≤ (TXT).txt")
            BOT.BOT().bot_mes_html(mes="‚úÖ –°–µ–±–µ—Å—Ç–æ–µ–º–æ—Å—Ç—å", silka=0)
            BOT.BOT().bot_mes_html(mes="‚úÖ –í–µ—Å", silka=0)
            if os.path.isfile(put_sebes_extract):
                shutil.copy(put_sebes_extract, put_sebes)

                # —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –ø–æ—Å–ª–µ –ø—Ä–µ–Ω–æ—Å–∞
                if os.path.isfile(put_sebes_extract):
                    os.remove(put_sebes_extract)
                else:
                    print("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:", put_sebes_extract)
            else:
                print("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:", os.path.basename(put_sebes_extract))
            # –ª–æ–≥ #####################################################################################################


            put_proverca_extract = os.path.join(put_zip_extract, '–§–∏–Ω—Ä–µ–∑ –ª–µ–±–µ–¥–µ–≤ –ü–†–æ–≤–µ—Ä–∫–∞ (TXT).txt')
            print("–ü–æ–ª—É—á–µ–Ω–∏–µ: –§–∏–Ω—Ä–µ–∑ –ª–µ–±–µ–¥–µ–≤ –ü–†–æ–≤–µ—Ä–∫–∞ (TXT).txt")
            BOT.BOT().bot_mes_html(mes="‚úÖ –ü—Ä–æ–¥–∞–∂–∏",silka=0)
            if os.path.isfile(put_proverca_extract):
                shutil.copy(put_proverca_extract, put_proverca)

                # —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –ø–æ—Å–ª–µ –ø—Ä–µ–Ω–æ—Å–∞
                if os.path.isfile(put_proverca_extract):
                    os.remove(put_proverca_extract)
                else:
                    print("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:", put_proverca_extract)
            else:
                print("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:", os.path.basename(put_proverca_extract))
            # –ª–æ–≥ #####################################################################################################

            put_spravka_extract = os.path.join(put_zip_extract, '–®—Ç—Ä–∏—Ö–∫–æ–¥—ã (TXT).txt')
            print("–ü–æ–ª—É—á–µ–Ω–∏–µ: –®—Ç—Ä–∏—Ö–∫–æ–¥—ã (TXT).txt")

            BOT.BOT().bot_mes_html(mes="‚úÖ –®—Ç—Ä–∏—Ö–∫–æ–¥–∞(–ù–°–ò)", silka=0)
            if os.path.isfile(put_spravka_extract):
                shutil.copy(put_spravka_extract, put_spravka)

                spravka =pd.read_csv(os.path.join(put_spravka, '–®—Ç—Ä–∏—Ö–∫–æ–¥—ã (TXT).txt'), sep="\t", encoding="utf-8")
                spravka.rename(columns={'–°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏': '–°—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏ (–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ "–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞")',
                                        "–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è infovizion": "–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è infovizion (–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ \"–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞\")"}, inplace=True)

                spravka.to_csv(PUT + "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏\\–Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞\\–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –Ω–æ–º–µ–∫–ª–∞—Ç—É—Ä—ã.txt", sep="\t",
                               encoding="utf-8", index=False)

                # —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –ø–æ—Å–ª–µ –ø—Ä–µ–Ω–æ—Å–∞
                if os.path.isfile(put_spravka_extract):
                    os.remove(put_spravka_extract)
                else:
                    print("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:", put_spravka_extract)

            else:
                print("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:", os.path.basename(put_spravka_extract))
            # –ª–æ–≥ #####################################################################################################

            # —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –ø–æ—Å–ª–µ –ø—Ä–µ–Ω–æ—Å–∞
            if os.path.isfile(zip_files):
                os.remove(zip_files)
            else:
                print("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω:", zip_files)
            return
    def setevoy_spisania(self):
        # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –∏ –ø–∞–ø–∫–∞–º
        print("–ü–æ–ª—É—á–µ–Ω–∏–µ: –°–ø–∏—Å–∞–Ω–∏—è")
        source_file = r'\\rtlfranch3\–î–∞–Ω–Ω—ã–µ –∏–∑ 1–°\–î–ª—è –î–∞—à–±–æ—Ä–¥–∞\–°–ø–∏—Å–∞–Ω–∏—è\–°–ø–∏—Å–∞–Ω–∏—è —Ç–µ–∫.–º..zip'
        #source_file = r'\\rtlfranch3\–î–∞–Ω–Ω—ã–µ –∏–∑ 1–°\–î–ª—è –î–∞—à–±–æ—Ä–¥–∞\–°–ø–∏—Å–∞–Ω–∏—è\–°–ø–∏—Å–∞–Ω–∏—è –º–µ—Å..zip'
        destination_folder = PUT + 'NEW\\–°–ø–∏—Å–∞–Ω–∏—è\\'

        if os.path.isfile(source_file):
            # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ –ø–∞–ø–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
            shutil.copy2(source_file, destination_folder)
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
            copied_file = os.path.join(destination_folder, os.path.basename(source_file))
            # –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            with zipfile.ZipFile(copied_file, 'r') as zip_ref:
                zip_ref.extractall(destination_folder)
            # –£–¥–∞–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
            os.remove(copied_file)
            BOT.BOT().bot_mes_html(mes="‚úÖ –°–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 7 –¥–Ω–µ–π", silka=0)

        else:
            source_file = r"\\rtlfranch3\–î–∞–Ω–Ω—ã–µ –∏–∑ 1–°\–î–ª—è –î–∞—à–±–æ—Ä–¥–∞\–°–ø–∏—Å–∞–Ω–∏—è\–°–ø–∏—Å–∞–Ω–∏—è –º–µ—Å..zip"
            # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ –ø–∞–ø–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
            shutil.copy2(source_file, destination_folder)
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
            copied_file = os.path.join(destination_folder, os.path.basename(source_file))
            # –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            with zipfile.ZipFile(copied_file, 'r') as zip_ref:
                zip_ref.extractall(destination_folder)
            # –£–¥–∞–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
            os.remove(copied_file)
            BOT.BOT().bot_mes_html(mes="‚úÖ –°–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞", silka=0)

    def setevoy_degustacia(self):
        # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –∏ –ø–∞–ø–∫–∞–º
        BOT.BOT().bot_mes_html(mes="‚úÖ –¥–µ–≥—É—Å—Ç–∞—Ü–∏–∏", silka=0)
        print("–ü–æ–ª—É—á–µ–Ω–∏–µ: –¥–µ–≥—É—Å—Ç–∞—Ü–∏–∏")
        source_file = r'\\rtlfranch3\–î–∞–Ω–Ω—ã–µ –∏–∑ 1–°\–î–ª—è –î–∞—à–±–æ—Ä–¥–∞\–î–µ–≥—É—Å—Ç–∞—Ü–∏–∏\–î–µ–≥—É—Å—Ç–∞—Ü–∏–∏ –ø—Ä–æ—à–ª–∞—è –Ω–µ–¥–µ–ª—è.zip'
        destination_folder =  PUT +  'NEW\\–î–µ–≥—É—Å—Ç–∞—Ü–∏–∏\\'

        if os.path.isfile(source_file):
            shutil.copy2(source_file, destination_folder)
            copied_file = os.path.join(destination_folder, os.path.basename(source_file))
            with zipfile.ZipFile(copied_file, 'r') as zip_ref:
                zip_ref.extractall(destination_folder)
            os.remove(copied_file)

        else:
            BOT.BOT().bot_mes_html(mes="‚ùó–ù–µ—Ç —Ñ–∞–π–ª–∞ –¥–µ–≥—É—Å—Ç–∞—Ü–∏–∏", silka=0)
    def Nmenklatura(self, rows=None):
        # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –∏ –ø–∞–ø–∫–∞–º
        print("–ü–æ–ª—É—á–µ–Ω–∏–µ: –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤")
        ot = r"\\rtlfranch3\–î–∞–Ω–Ω—ã–µ –∏–∑ 1–°\–î–ª—è –î–∞—à–±–æ—Ä–¥–∞\SKU –∏ –ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞"
        to = r"C:\Users\lebedevvv\Desktop\FRS\Dashbord_new\–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏\–Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞"
        for filename in os.listdir(ot):
            filename = filename[:-4]
            pabl = os.path.join(ot, filename + ".txt")
            save = os.path.join(to, filename+ "_new.txt")
            shutil.copy2(pabl, save)
            if filename == "GROUPS":
                spravka = pd.read_csv(
                    r"C:\Users\lebedevvv\Desktop\FRS\Dashbord_new\–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏\–Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞\GROUPS_new.txt",
                    sep="\t", encoding="utf-8")
                komanda = pd.read_excel(
                    "https://docs.google.com/spreadsheets/d/1dNt8qpZL_ST8aF_iBqV7oVQvH1tsExMd6uLCiC_UtfQ/export?exportFormat=xlsx")
                spravka = spravka.merge(komanda, on=['–í—Ö–æ–¥–∏—Ç –≤ –≥—Ä—É–ø–ø—É'], how="left")
                spravka.to_csv(PUT + "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏\\–Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞\\GROUPS.txt", sep="\t", encoding="utf-8")
        spravk_sku = pd.read_csv(
            r"C:\Users\lebedevvv\Desktop\FRS\Dashbord_new\–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏\–Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞\–°–ø–∏—Å–æ–∫_new.txt",
            sep="\t", encoding="utf-8")
        spravk_sku.loc[spravk_sku["–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞"] == "–ù–µ –∏—Å–ø –≠–∫–ª–µ—Ä –°–• —Å–º–æ—Ä–æ–¥–∏–Ω–æ–≤—ã–π, 50–≥", "–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞"] = "–ë–µ–¥—Ä—ã—à–∫–æ —Ü—ã–ø–ª–µ–Ω–∫–∞-–±—Ä–æ–π–ª–µ—Ä–∞ (–≤ –ø–æ–¥–ª–æ–∂–∫–µ), –æ—Ö–ª"
        spravk_sku.to_csv(PUT + "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏\\–Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞\\–°–ø–∏—Å–æ–∫.txt", sep="\t", encoding="utf-8")
        os.remove(r"C:\Users\lebedevvv\Desktop\FRS\Dashbord_new\–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏\–Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞\GROUPS_new.txt")
        os.remove(r"C:\Users\lebedevvv\Desktop\FRS\Dashbord_new\–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏\–Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞\–°–ø–∏—Å–æ–∫_new.txt")
        BOT.BOT().bot_mes_html(mes="‚úÖ –°–ø—Ä–∞–≤–æ–Ω–∏–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã", silka=0)
    def jalob(self):
        start = r"\\rtlfranch3\–î–∞–Ω–Ω—ã–µ –∏–∑ 1–°\–î–ª—è –î–∞—à–±–æ—Ä–¥–∞\–ñ–∞–ª–æ–±—ã"
        end = r"C:\Users\lebedevvv\Desktop\FRS\Dashbord_new\–ñ–∞–ª–æ–±—ã\–ò—Å—Ö–æ–¥–Ω–∏–∫–∏"
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
        tmp_folder = r'C:\Users\lebedevvv\Desktop\FRS\Dashbord_new\–ñ–∞–ª–æ–±—ã\tmp'
        os.makedirs(tmp_folder, exist_ok=True)
        for filename in os.listdir(start):

            PUT_File_start = os.path.join(start, filename)
            PUT_File_end = os.path.join(end, filename)
            # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ –ø–∞–ø–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
            shutil.copy2(PUT_File_start, PUT_File_end)
            # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
            new_file = PUT_File_end
            # –ü—É—Ç—å –∫ –≤–∞—à–µ–º—É –∏—Å—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É .xlsx
            xlsx_file_path = new_file

            # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º excel –∫–∞–∫ zip –≤ –Ω–∞—à—É –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
            with zipfile.ZipFile(xlsx_file_path) as excel_container:
                excel_container.extractall(tmp_folder)

            # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å –Ω–µ–≤–µ—Ä–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
            wrong_file_path = os.path.join(tmp_folder, 'xl', 'SharedStrings.xml')
            correct_file_path = os.path.join(tmp_folder, 'xl', 'sharedStrings.xml')

            os.rename(wrong_file_path, correct_file_path)
            # –ó–∞–ø–∞–∫–æ–≤—ã–≤–∞–µ–º excel –æ–±—Ä–∞—Ç–Ω–æ –≤ zip –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –≤ –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª
            shutil.make_archive(xlsx_file_path, 'zip', tmp_folder)
            os.remove(xlsx_file_path)
            os.rename(f'{xlsx_file_path}.zip', xlsx_file_path)
            shutil.rmtree(tmp_folder)
        df_grup = pd.DataFrame()
        for filename in os.listdir(end):
            end_file = os.path.join(end, filename)
            df = pd.read_excel(end_file,skiprows=4)
            df = df.loc[df["–í–∏–Ω–æ–≤–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.–í—ã—à–µ—Å—Ç–æ—è—â–µ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ"]!= "–ò—Ç–æ–≥–æ"]
            df = df.drop(columns=["–í–∏–Ω–æ–≤–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ.–í—ã—à–µ—Å—Ç–æ—è—â–µ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ","Unnamed: 1","Unnamed: 2"])

            df_grup = pd.concat([df_grup, df],axis=0)
        df_grup["–£—á–∞—Å—Ç–Ω–∏–∫–∏.–ü–∞—Ä—Ç–Ω–µ—Ä_–ü—Ä–æ–≤–µ—Ä–∫–∞"] =  df_grup["–£—á–∞—Å—Ç–Ω–∏–∫–∏.–ü–∞—Ä—Ç–Ω–µ—Ä"]

        rename.RENAME().Rread(name_data=df_grup,name_col="–£—á–∞—Å—Ç–Ω–∏–∫–∏.–ü–∞—Ä—Ç–Ω–µ—Ä")
        df_grup_nik = df_grup[["–£—á–∞—Å—Ç–Ω–∏–∫–∏.–ü–∞—Ä—Ç–Ω–µ—Ä","–£—á–∞—Å—Ç–Ω–∏–∫–∏.–ü–∞—Ä—Ç–Ω–µ—Ä_–ü—Ä–æ–≤–µ—Ä–∫–∞"]]
        df_grup_nik = df_grup_nik.drop_duplicates().reset_index(drop=True)
        df_grup_nik.to_excel(
            r"C:\Users\lebedevvv\Desktop\FRS\Dashbord_new\–ñ–∞–ª–æ–±—ã\–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω—ã\—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω—ã.xlsx", index=False)
        df_grup =  df_grup.drop(columns=["–£—á–∞—Å—Ç–Ω–∏–∫–∏.–ü–∞—Ä—Ç–Ω–µ—Ä_–ü—Ä–æ–≤–µ—Ä–∫–∞",'–í–∏–Ω–æ–≤–Ω–æ–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ','–ò—Ç–æ–≥',"–ö–ª–∏–µ–Ω—Ç"])
        del df_grup_nik
        #–≤ —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã
        df_grup['–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'] = pd.to_datetime(df_grup['–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'], format='%d.%m.%Y %H:%M:%S')
        # —Ç–æ–ª—å–∫–æ –¥–∞—Ç—É
        df_grup['–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'] = df_grup['–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'].dt.date
        # –¥–æ–∞–≤–ª–µ–Ω–∏–µ –¢–£
        TY, ty_open_magaz = rename.RENAME().TY_Spravochnik()

        TY = TY.loc[TY["–ú–µ–Ω–µ–¥–∂–µ—Ä"].notnull()]
        df_grup  = df_grup.rename(columns={'–£—á–∞—Å—Ç–Ω–∏–∫–∏.–ü–∞—Ä—Ç–Ω–µ—Ä':"–º–∞–≥–∞–∑–∏–Ω"})
        df_grup = df_grup.merge(TY, on=["–º–∞–≥–∞–∑–∏–Ω"], how="left").reset_index(drop=True)
        df_grup  = df_grup.loc[df_grup ["–ú–µ–Ω–µ–¥–∂–µ—Ä"].notnull()]
        df_grup['–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'] = pd.to_datetime(df_grup['–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'], format='%Y-%m-%d')

        # –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º, –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—é –∏ –ø–æ—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–± –∏ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–µ–π –¥–ª—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã
        result = df_grup.groupby(['–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',"–º–∞–≥–∞–∑–∏–Ω",'–ú–µ–Ω–µ–¥–∂–µ—Ä','–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ'])['–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'].count().unstack(fill_value=0).reset_index()
        # –í—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        new_columns_order = [
            "–ú–µ–Ω–µ–¥–∂–µ—Ä",
            '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ',
            '–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
            "–º–∞–≥–∞–∑–∏–Ω",
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞.–ì—Ä—É–ø–ø–∞.–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ',
            '–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞',
            '–ü—Ä–∏—á–∏–Ω–∞ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è',
            '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç—Ä–∞–±–æ—Ç–∫–∏',
            '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è',
            '–°—Ç–∞—Ç—É—Å',
            '–î–∞—Ç–∞ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è',
            '–ö–∞–Ω–∞–ª —Å–≤—è–∑–∏',
            '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–±—Ä–∞—â–µ–Ω–∏—è',
            '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å',
            '–ì—Ä—É–ø–ø–∞ —Å–≤—è–∑–∏',
            '–°–Ω—è—Ç–∞ —Å –ø—Ä–æ–¥–∞–∂–∏ –≤—Å—è –ø–∞—Ä—Ç–∏—è',
            '–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ—Ç–µ–Ω–∑–∏–∏']
        # –ü–µ—Ä–µ—É–ø–æ—Ä—è–¥–æ—á–∏—Ç–µ —Å—Ç–æ–ª–±—Ü—ã –≤ –∏—Å—Ö–æ–¥–Ω–æ–º –¥–∞—Ç–∞—Ñ—Ä–µ–π–º–µ
        df_grup = df_grup[new_columns_order]
        df_grup.to_excel(
            r"C:\Users\lebedevvv\Desktop\FRS\Dashbord_new\–ñ–∞–ª–æ–±—ã\–î–ª—è_–¥–∞—à–±–æ—Ä–¥–∞(–ñ–∞–ª–æ–±—ã).xlsx",
            index=False)
        result.to_excel(
            r"C:\Users\lebedevvv\Desktop\FRS\Dashbord_new\–ñ–∞–ª–æ–±—ã\–î–ª—è_–¥–∞—à–±–æ—Ä–¥–∞(–ñ–∞–ª–æ–±—ã)_—Å–≥—Ä—É–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ.xlsx",
            index=False)
        BOT.BOT().bot_mes_html(mes="‚úÖ –ñ–∞–ª–æ–±—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã", silka=0)

def run_NEW_DATA_sd():
    if ini.time_seychas < ini.time_bot_vrem:
        # –≤—Å—Ç–∞–≤–∏—Ç—å –π–µ–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        try:
            NEW_DATA_sd().reserv()
        except:
            BOT.BOT().bot_mes_html(mes="üìõ –æ—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤", silka=0)
        try:
            NEW_DATA_sd().setevoy()
        except:
            BOT.BOT().bot_mes_html(mes="üìõ –ù–µ –ø–æ–ª—É—á–µ–Ω–∞ —Å–µ–±–µ—Å—Ç–æ–µ–º–æ—Å—Ç—å", silka=0)
        try:
            NEW_DATA_sd().setevoy_spisania()
        except:
            BOT.BOT().bot_mes_html(mes="üìõ –ù–µ –ø–æ–ª—É—á–µ–Ω—ã —Å–ø–∏—Å–∞–Ω–∏—è", silka=0)
        try:
            NEW_DATA_sd().setevoy_degustacia()
        except:
            BOT.BOT().bot_mes_html(mes="üìõ –ù–µ –ø–æ–ª—É—á–µ–Ω—ã –¥–µ–≥—É—Å—Ç–∞—Ü–∏–∏ —à–∞—à–ª—ã–∫–∞", silka=0)
        try:
            NEW_DATA_sd().Nmenklatura()
        except:
            BOT.BOT().bot_mes_html(mes="üìõ –ù–µ –æ–Ω–æ–≤–ª–µ–Ω–∞ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞", silka=0)
        try:
            NEW_DATA_sd().jalob()
        except:
            BOT.BOT().bot_mes_html(mes="üìõ –ù–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∂–∞–ª–æ–±—ã", silka=0)
    else:
        print("–í—Ä–µ–º—è: ", ini.time_seychas, "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: ", ini.time_bot_vrem)



if __name__ == '__main__':
    NEW_DATA_sd().jalob()
    #NEW_DATA_sd().reserv()